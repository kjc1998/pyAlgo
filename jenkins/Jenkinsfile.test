pipeline {
    agent {
        docker {
            label 'docker'
            image 'docker.io/python:3.7'
        }
    }

    options {
        // only keeps last 10 builds
        buildDiscarder logRotator(
            artifactDaysToKeepStr: '',
            artifactNumToKeepStr: '10',
            daysToKeepStr: '',
            numToKeepStr: '10'
        )
    }

    stages {
        stage('Validate') {
            steps {
                script {
                    def targetBranches = ['main']
                    def target = env.CHANGE_TARGET

                    if (target != null && !targetBranches.contains(target)) {
                        currentBuild.result = 'ABORTED'
                        error('Abort Build')
                    }
                }
            }
        }
        stage('Setup') {
            steps {sh '''
                python -m venv .venv
                . .venv/bin/activate
            '''}
        }
        stage('Install') {
            steps { sh 'make devinstall VERSION=0.0.0' }
        }
        stage('Test') {
            steps { sh 'which pip' }
        }
    }
}